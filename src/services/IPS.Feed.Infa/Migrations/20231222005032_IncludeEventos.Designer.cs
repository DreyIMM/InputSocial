// <auto-generated />
using System;
using IPS.Feed.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IPS.Feed.Infa.Migrations
{
    [DbContext(typeof(FeedContext))]
    [Migration("20231222005032_IncludeEventos")]
    partial class IncludeEventos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IPS.Feed.Domain.Models.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdPostagem")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id");

                    b.HasIndex("IdPostagem");

                    b.ToTable("Comentarios", (string)null);
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Curtida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCurtida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdPostagem")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdPostagem");

                    b.ToTable("Curtidas", (string)null);
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DescricaoEvento")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<bool>("Limite")
                        .HasColumnType("boolean");

                    b.Property<int?>("QuantidadePessoas")
                        .HasColumnType("integer");

                    b.Property<string>("StatusEvento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TituloEvento")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Postagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataPostagems")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EntidadesNlp")
                        .HasColumnType("text");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool>("Modificado")
                        .HasColumnType("boolean");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Postagens", (string)null);
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.RelacaoSeguindo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdSeguidores")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario", "IdSeguidores")
                        .IsUnique();

                    b.ToTable("Seguidores", (string)null);
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Comentario", b =>
                {
                    b.HasOne("IPS.Feed.Domain.Models.Postagem", "Postagem")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPostagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postagem");
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Curtida", b =>
                {
                    b.HasOne("IPS.Feed.Domain.Models.Postagem", "Postagem")
                        .WithMany("Curtidas")
                        .HasForeignKey("IdPostagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postagem");
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Evento", b =>
                {
                    b.OwnsOne("IPS.Feed.Domain.Models.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("EventoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<Guid?>("EventoGuid")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Regiao")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("cep")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EventoId");

                            b1.ToTable("Eventos");

                            b1.WithOwner("Evento")
                                .HasForeignKey("EventoId");

                            b1.Navigation("Evento");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("IPS.Feed.Domain.Models.Postagem", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");
                });
#pragma warning restore 612, 618
        }
    }
}
